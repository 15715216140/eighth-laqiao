#include <iostream>
#include <vector>
#include <algorithm>
int k, cnt = 0;
using namespace std;
vector<int> f(vector<int> v) {
    int carry = 0;
    vector<int> v1(v), v2(v), ans(v.size(), 0);
    reverse(v1.begin(), v1.end());
    for (int i = v.size() - 1; i >= 0; i--) {
        ans[i] = (v1[i] + v2[i] + carry) % k;
        carry = (v1[i] + v2[i] + carry) / k;
    }
    if (carry > 0) ans.insert(ans.begin(), carry);
    return ans;
}
bool is(vector<int> v) {
    for (int i = 0; i < v.size(); i++)
        if (v[i] != v[v.size() - i - 1]) return false;
    return true;
}
int main() {
    vector<int> v;
    string s;
    cin >> k >> s;
    for (int i = 0; i < s.length(); i++) {
        if (s[i] >= '0' && s[i] <= '9') v.push_back(s[i] - '0');
        else v.push_back(s[i] - 'A' + 10);
    }
    while (!is(v)) {
        v = f(v);
        cnt++;
        if(cnt == 30){
            printf("Impossible!\n");
            return 0;
        }
    }
    printf("STEP=%d\n",cnt);
    return 0;
}
