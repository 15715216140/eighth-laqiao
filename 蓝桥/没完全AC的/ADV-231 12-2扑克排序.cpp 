#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
using namespace std;
map<string, int> m;
struct card {
    string num, kind;

    bool friend operator<(const card &card1, const card &card2) {
        if (m[card1.kind] == m[card2.kind]) return m[card1.kind] < m[card2.kind];
        return m[card1.num] < m[card2.num];
    }
};
int main() {
    string s1, s2;
    vector<card> v;
    m["2"] = 2;
    m["3"] = 3;
    m["4"] = 4;
    m["5"] = 5;
    m["6"] = 6;
    m["7"] = 7;
    m["8"] = 8;
    m["9"] = 9;
    m["10"] = 10;
    m["J"] = 11;
    m["Q"] = 12;
    m["K"] = 13;
    m["A"] = 14;
    m["d"] = 1;
    m["c"] = 2;
    m["h"] = 3;
    m["s"] = 3;
    while (cin >> s1 >> s2)
        v.push_back({s1, s2});
    sort(v.begin(), v.end());
    for (int i = 0; i < v.size(); i++) {
        cout << v[i].num << " " << v[i].kind << " ";
    }
    return 0;
}
