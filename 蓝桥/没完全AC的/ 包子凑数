#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

int gcd(int a, int b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}

int main() {
    int t, n = 0, dp[800001] = {0}, maxn = 800000, cnt = 0, one, flag = 0;
    vector<int> w(1), v(1);
    cin >> n;
    cin >> one;
    w.push_back(one);
    v.push_back(one);
    while (cin >> t) {
        one = gcd(one, t);
        if (one != 1) flag = 1;
        w.push_back(t);
        v.push_back(t);
    }
    for (int i = 1; i <= n; i++) {
        for (int j = w[i]; j <= maxn; j++) {
            dp[j] = max(dp[j], dp[j - w[i]] + v[i]);
        }
    }
    for (int i = maxn; i > 0; i--) {
        if (dp[i] < i) {
            cnt++;
        }
    }
    if (flag) cout << "INF";
    else cout << cnt;
    
    return 0;
}
